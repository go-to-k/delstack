// Code generated by MockGen. DO NOT EDIT.
// Source: ./operator_collection.go

// Package operation is a generated GoMock package.
package operation

import (
	reflect "reflect"

	types "github.com/aws/aws-sdk-go-v2/service/cloudformation/types"
	gomock "github.com/golang/mock/gomock"
)

// MockIOperatorCollection is a mock of IOperatorCollection interface.
type MockIOperatorCollection struct {
	ctrl     *gomock.Controller
	recorder *MockIOperatorCollectionMockRecorder
}

// MockIOperatorCollectionMockRecorder is the mock recorder for MockIOperatorCollection.
type MockIOperatorCollectionMockRecorder struct {
	mock *MockIOperatorCollection
}

// NewMockIOperatorCollection creates a new mock instance.
func NewMockIOperatorCollection(ctrl *gomock.Controller) *MockIOperatorCollection {
	mock := &MockIOperatorCollection{ctrl: ctrl}
	mock.recorder = &MockIOperatorCollectionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIOperatorCollection) EXPECT() *MockIOperatorCollectionMockRecorder {
	return m.recorder
}

// GetLogicalResourceIds mocks base method.
func (m *MockIOperatorCollection) GetLogicalResourceIds() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogicalResourceIds")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetLogicalResourceIds indicates an expected call of GetLogicalResourceIds.
func (mr *MockIOperatorCollectionMockRecorder) GetLogicalResourceIds() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogicalResourceIds", reflect.TypeOf((*MockIOperatorCollection)(nil).GetLogicalResourceIds))
}

// GetOperators mocks base method.
func (m *MockIOperatorCollection) GetOperators() []IOperator {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOperators")
	ret0, _ := ret[0].([]IOperator)
	return ret0
}

// GetOperators indicates an expected call of GetOperators.
func (mr *MockIOperatorCollectionMockRecorder) GetOperators() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOperators", reflect.TypeOf((*MockIOperatorCollection)(nil).GetOperators))
}

// RaiseUnsupportedResourceError mocks base method.
func (m *MockIOperatorCollection) RaiseUnsupportedResourceError() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RaiseUnsupportedResourceError")
	ret0, _ := ret[0].(error)
	return ret0
}

// RaiseUnsupportedResourceError indicates an expected call of RaiseUnsupportedResourceError.
func (mr *MockIOperatorCollectionMockRecorder) RaiseUnsupportedResourceError() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RaiseUnsupportedResourceError", reflect.TypeOf((*MockIOperatorCollection)(nil).RaiseUnsupportedResourceError))
}

// SetOperatorCollection mocks base method.
func (m *MockIOperatorCollection) SetOperatorCollection(stackName *string, stackResourceSummaries []types.StackResourceSummary) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetOperatorCollection", stackName, stackResourceSummaries)
}

// SetOperatorCollection indicates an expected call of SetOperatorCollection.
func (mr *MockIOperatorCollectionMockRecorder) SetOperatorCollection(stackName, stackResourceSummaries interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetOperatorCollection", reflect.TypeOf((*MockIOperatorCollection)(nil).SetOperatorCollection), stackName, stackResourceSummaries)
}
